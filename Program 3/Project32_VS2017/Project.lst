Microsoft (R) Macro Assembler Version 14.16.27026.1	    01/29/19 15:17:45
#Program Template     (template.asm			     Page 1 - 1


				TITLE Program Template     (template.asm)

				; Author: Robert Elsom
				; Last Modified: 1/29/2019
				; OSU email address: elsomr@oregonstate.edu
				; Course number/section: 271-400
				; Project Number: 3                Due Date: 2/11/2019
				; Description: Program that gets users name, gets user to input negative numbers
				;				between -100 and -1 and calculates the sum and averages all of those 
				;				numbers until the user enters a positive number to exit

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.const
 00000000 FFFFFFFF		upperLimit		DWORD	-1
 00000004 FFFFFF9C		lowerLimit		DWORD	-100

 00000000			.data
 00000000 57 65 6C 63 6F	titlePrompt				BYTE		"Welcome to the Integer Accumalator",0
	   6D 65 20 74 6F
	   20 74 68 65 20
	   49 6E 74 65 67
	   65 72 20 41 63
	   63 75 6D 61 6C
	   61 74 6F 72 00
 00000023 50 72 6F 67 72	creatorPrompt			BYTE		"Programmed by Robert Elsom",0
	   61 6D 6D 65 64
	   20 62 79 20 52
	   6F 62 65 72 74
	   20 45 6C 73 6F
	   6D 00
 0000003E 2A 2A 45 78 74	extraCredit1			BYTE		"**Extra Credit: Display number of lines during input",0
	   72 61 20 43 72
	   65 64 69 74 3A
	   20 44 69 73 70
	   6C 61 79 20 6E
	   75 6D 62 65 72
	   20 6F 66 20 6C
	   69 6E 65 73 20
	   64 75 72 69 6E
	   67 20 69 6E 70
	   75 74 00
 00000073 2A 2A 45 78 74	extraCredit2			BYTE		"**Extra Credit: Calculate and display average as floating point to nearest .001",0
	   72 61 20 43 72
	   65 64 69 74 3A
	   20 43 61 6C 63
	   75 6C 61 74 65
	   20 61 6E 64 20
	   64 69 73 70 6C
	   61 79 20 61 76
	   65 72 61 67 65
	   20 61 73 20 66
	   6C 6F 61 74 69
	   6E 67 20 70 6F
	   69 6E 74 20 74
	   6F 20 6E 65 61
	   72 65 73 74 20
	   2E 30 30 31 00
 000000C3 57 68 61 74 20	userNamePrompt			BYTE		"What is your name? ",0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 000000D7  00000021 [		userName				BYTE		33 dup(0)
	    00
	   ]
 000000F8 48 65 6C 6C 6F	helloPrompt				BYTE		"Hello, ",0
	   2C 20 00
 00000100 50 6C 65 61 73	instructionPrompt		BYTE		"Please enter numbers between [-100, -1].",0
	   65 20 65 6E 74
	   65 72 20 6E 75
	   6D 62 65 72 73
	   20 62 65 74 77
	   65 65 6E 20 5B
	   2D 31 30 30 2C
	   20 2D 31 5D 2E
	   00
 00000129 45 6E 74 65 72	instructionPrompt2		BYTE		"Enter a non-negative number when you are finished to see the results.",0
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 74 68 65
	   20 72 65 73 75
	   6C 74 73 2E 00
 0000016F 00000000		sum						SDWORD		0
 00000173 00000000		number					SDWORD		?
 00000177 2E 00			decSym					BYTE		2eh, 0
 00000179 20 00			spaceSym				BYTE		20h,0
 0000017B 00000000		floatQuotient			REAL4		?
 0000017F 00000000		floatRemainder			REAL4		?
 00000183 00000000		floatDecimal			REAL4		?
 00000187 FFFFFFFF		decimalFactor			DWORd		-1
 0000018B 00000000		quotient				SDWORD		0
 0000018F 000003E8		scaleFactor				DWORD		1000
 00000193 00000001		lineCounter				DWORD		1
 00000197 00000000		numberCounter			DWORD		0
 0000019B 45 6E 74 65 72	inputPrompt				BYTE		"Enter a number: ",0
	   20 61 20 6E 75
	   6D 62 65 72 3A
	   20 00
 000001AC 59 6F 75 20 65	totalNumbersPrompt		BYTE		"You entered ",0
	   6E 74 65 72 65
	   64 20 00
 000001B9 20 76 61 6C 69	totalNumbersPrompt2		BYTE		" valid numbers.",0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   00
 000001C9 54 68 65 20 73	sumPrompt				BYTE		"The sum of your valid numbers is ",0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 000001EB 54 68 65 20 72	averagePrompt			BYTE		"The rounded average is ",0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00
 00000203 54 68 61 6E 6B	goodbyePrompt			BYTE		"Thank you for playing Integer Accumulator! ",0
	   20 79 6F 75 20
	   66 6F 72 20 70
	   6C 61 79 69 6E
	   67 20 49 6E 74
	   65 67 65 72 20
	   41 63 63 75 6D
	   75 6C 61 74 6F
	   72 21 20 00
 0000022F 49 74 27 73 20	goodbyePrompt2			BYTE		"It's been a pleasure to meet you, ",0
	   62 65 65 6E 20
	   61 20 70 6C 65
	   61 73 75 72 65
	   20 74 6F 20 6D
	   65 65 74 20 79
	   6F 75 2C 20 00
 00000252 53 6F 72 72 79	repeatValidIntPrompt	BYTE		"Sorry, that number is too low.",0		
	   2C 20 74 68 61
	   74 20 6E 75 6D
	   62 65 72 20 69
	   73 20 74 6F 6F
	   20 6C 6F 77 2E
	   00
 00000271 59 6F 75 20 65	noNegativePrompt		BYTE		"You entered 0 valid integers. No results to display.",0
	   6E 74 65 72 65
	   64 20 30 20 76
	   61 6C 69 64 20
	   69 6E 74 65 67
	   65 72 73 2E 20
	   4E 6F 20 72 65
	   73 75 6C 74 73
	   20 74 6F 20 64
	   69 73 70 6C 61
	   79 2E 00


 00000000			.code
 00000000			main PROC

				;------------------------------------------------------------------------
				;		Introduction
				;		Displays starting title and extra credits
				;------------------------------------------------------------------------	
 00000000  BA 00000000 R		mov		edx, OFFSET titlePrompt
 00000005  E8 00000000 E		call	WriteString
 0000000A  E8 00000000 E		call	CrLf
 0000000F  BA 00000023 R		mov		edx, OFFSET creatorPrompt
 00000014  E8 00000000 E		call	WriteString
 00000019  E8 00000000 E		call	CrLf
 0000001E  BA 0000003E R		mov		edx, OFFSET extraCredit1
 00000023  E8 00000000 E		call	WriteString
 00000028  E8 00000000 E		call	CrLf
 0000002D  BA 00000073 R		mov		edx, OFFSET extraCredit2
 00000032  E8 00000000 E		call	WriteString
 00000037  E8 00000000 E		call	CrLf
 0000003C  E8 00000000 E		call	CrLf

				;-----------------------------------------------------------------------
				;		USER INSTRUCTIONS
				;		Displays instructions to user and gets user name
				;-----------------------------------------------------------------------	
 00000041  BA 000000C3 R		mov		edx, OFFSET userNamePrompt
 00000046  E8 00000000 E		call	WriteString
 0000004B  BA 000000D7 R		mov		edx, OFFSET userName
 00000050  B9 00000021			mov		ecx, SIZEOF userName
 00000055  E8 00000000 E		call	ReadString	
 0000005A  BA 000000F8 R		mov		edx, OFFSET helloPrompt
 0000005F  E8 00000000 E		call	WriteString
 00000064  BA 000000D7 R		mov		edx, OFFSET userName
 00000069  E8 00000000 E		call	WriteString
 0000006E  E8 00000000 E		call	CrLf
 00000073  BA 00000100 R		mov		edx, OFFSET instructionPrompt
 00000078  E8 00000000 E		call	WriteString
 0000007D  E8 00000000 E		call	CrLf
 00000082  BA 00000129 R		mov		edx, OFFSET instructionPrompt2
 00000087  E8 00000000 E		call	WriteString
 0000008C  E8 00000000 E		call	CrLf
 00000091  E8 00000000 E		call	CrLf
 00000096  EB 0F			jmp		validInteger

				;-----------------------------------------------------------------------------
				;		GET USER DATA
				;		Repeatedly gets a number from the user and updates the sum. 
				;-----------------------------------------------------------------------------
 00000098			validIntegerRepeat:
 00000098  BA 00000252 R		mov		edx, OFFSET repeatValidIntPrompt
 0000009D  E8 00000000 E		call	WriteString
 000000A2  E8 00000000 E		call	CrLf
 000000A7			validInteger:
					;display prompt with line number and get number from user
 000000A7  A1 00000193 R		mov		eax, lineCounter
 000000AC  E8 00000000 E		call	WriteDec
 000000B1  BA 00000177 R		mov		edx, OFFSET decSym
 000000B6  E8 00000000 E		call	WriteString
 000000BB  BA 00000179 R		mov		edx, OFFSET spaceSym
 000000C0  E8 00000000 E		call	WriteString
 000000C5  BA 0000019B R		mov		edx, OFFSET inputPrompt
 000000CA  E8 00000000 E		call	WriteString
 000000CF  E8 00000000 E		call	ReadInt
 000000D4  A3 00000173 R		mov		number, eax
					;validate number is in valid range
 000000D9  8B 1D 00000004 R		mov		ebx, lowerLimit
 000000DF  39 1D 00000173 R		cmp		number, ebx
 000000E5  7C B1			jl		validIntegerRepeat
					;if greater than, means it is positive and go to display results
 000000E7  8B 1D 00000000 R		mov		ebx, upperLimit
 000000ED  39 1D 00000173 R		cmp		number, ebx
 000000F3  7F 20			jg		displayResults
					

					;update sum and inc numberCounter and lineCounter
 000000F5  A1 0000016F R		mov		eax, sum
 000000FA  8B 1D 00000173 R		mov		ebx, number
 00000100  03 C3			add		eax, ebx
 00000102  A3 0000016F R		mov		sum, eax
 00000107  FF 05 00000197 R		inc		numberCounter
 0000010D  FF 05 00000193 R		inc		lineCounter
 00000113  EB 92			jmp		validInteger

				;-----------------------------------------------------------------------------
				;		Display Results
				;		Once user inputs positive integer, displays number of valid ints,
				;		sum, and average.
				;-----------------------------------------------------------------------------
 00000115			displayResults:
				;check if there is not a negative integer, if there is jmp to normalResults
 00000115  E8 00000000 E		call	CrLf
 0000011A  A1 00000197 R		mov		eax, numberCounter
 0000011F  83 F8 00			cmp		eax, 0
 00000122  7F 14			jg		normalResults

 00000124  BA 00000271 R		mov		edx, OFFSET noNegativePrompt
 00000129  E8 00000000 E		call	WriteString
 0000012E  E8 00000000 E		call	CrLf
 00000133  E9 000000C5			jmp		goodByeMessage


 00000138			normalResults:
 00000138  E8 00000000 E		call	CrLf
					;print total number of numbers
 0000013D  BA 000001AC R		mov		edx, OFFSET totalNumbersPrompt
 00000142  E8 00000000 E		call	WriteString
 00000147  A1 00000197 R		mov		eax, numberCounter
 0000014C  E8 00000000 E		call	WriteDec
 00000151  BA 000001B9 R		mov		edx, OFFSET totalNumbersPrompt2
 00000156  E8 00000000 E		call	WriteString
 0000015B  E8 00000000 E		call	CrLf

					;print sum
 00000160  BA 000001C9 R		mov		edx, OFFSET sumPrompt
 00000165  E8 00000000 E		call	WriteString
 0000016A  A1 0000016F R		mov		eax, sum
 0000016F  E8 00000000 E		call	WriteInt
 00000174  E8 00000000 E		call	CrLf

					;calculate average rounded to .001
 00000179  A1 0000016F R		mov		eax, sum
 0000017E  99				cdq
 0000017F  8B 1D 00000197 R		mov		ebx, numberCounter
 00000185  F7 FB			idiv	ebx
 00000187  A3 0000018B R		mov		quotient, eax

 0000018C  DB 05 0000016F R		fild	sum
 00000192  D8 35 00000197 R		fdiv	numberCounter
 00000198  D8 0D 0000018F R		fmul	scaleFactor
 0000019E  D9 FC			frndint
 000001A0  DB 15 0000017F R		fist	floatRemainder
 000001A6  A1 0000018B R		mov		eax, quotient
 000001AB  8B 15 0000018F R		mov		edx, scaleFactor
 000001B1  F7 E2			mul		edx
 000001B3  A3 0000017B R		mov		floatQuotient, eax
 000001B8  A1 0000017F R		mov		eax, floatRemainder
 000001BD  2B 05 0000017B R		sub		eax, floatQuotient
					;make sure to change decimal to positive by multiplying by -1
 000001C3  8B 15 00000187 R		mov		edx, decimalFactor
 000001C9  F7 E2			mul		edx
 000001CB  A3 00000183 R		mov		floatDecimal, eax
					
					;print average
 000001D0  BA 000001EB R		mov		edx, OFFSET averagePrompt
 000001D5  E8 00000000 E		call	WriteString
 000001DA  A1 0000018B R		mov		eax, quotient
 000001DF  E8 00000000 E		call	WriteInt
 000001E4  BA 00000177 R		mov		edx, OFFSET decSym
 000001E9  E8 00000000 E		call	WriteString
 000001EE  A1 00000183 R		mov		eax, floatDecimal
 000001F3  E8 00000000 E		call	WriteDec
 000001F8  E8 00000000 E		call	CrLf


				;-------------------------------------------------------------------------------
				;		GOODBYE
				;		Tells user goodbye and exits
				;-------------------------------------------------------------------------------
 000001FD			goodByeMessage:	
 000001FD  E8 00000000 E		call	CrLf
 00000202  E8 00000000 E		call	CrLf
 00000207  BA 00000203 R		mov		edx, OFFSET goodbyePrompt
 0000020C  E8 00000000 E		call	WriteString
 00000211  E8 00000000 E		call	CrLf

 00000216  BA 0000022F R		mov		edx, OFFSET goodbyePrompt2
 0000021B  E8 00000000 E		call	WriteString
 00000220  BA 000000D7 R		mov		edx, OFFSET userName
 00000225  E8 00000000 E		call	WriteString
 0000022A  E8 00000000 E		call	CrLf
					exit	; exit to operating system
 0000022F  6A 00	   *	    push   +000000000h
 00000231  E8 00000000 E   *	    call   ExitProcess

 00000236			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.16.27026.1	    01/29/19 15:17:45
#Program Template     (template.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000008 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002A6 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000236 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000236 Public STDCALL
  validIntegerRepeat . . . . . .	L Near	 00000098 _TEXT	
  validInteger . . . . . . . . .	L Near	 000000A7 _TEXT	
  displayResults . . . . . . . .	L Near	 00000115 _TEXT	
  normalResults  . . . . . . . .	L Near	 00000138 _TEXT	
  goodByeMessage . . . . . . . .	L Near	 000001FD _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
averagePrompt  . . . . . . . . .	Byte	 000001EB _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
creatorPrompt  . . . . . . . . .	Byte	 00000023 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
decSym . . . . . . . . . . . . .	Byte	 00000177 _DATA	
decimalFactor  . . . . . . . . .	DWord	 00000187 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extraCredit1 . . . . . . . . . .	Byte	 0000003E _DATA	
extraCredit2 . . . . . . . . . .	Byte	 00000073 _DATA	
floatDecimal . . . . . . . . . .	DWord	 00000183 _DATA	
floatQuotient  . . . . . . . . .	DWord	 0000017B _DATA	
floatRemainder . . . . . . . . .	DWord	 0000017F _DATA	
goodbyePrompt2 . . . . . . . . .	Byte	 0000022F _DATA	
goodbyePrompt  . . . . . . . . .	Byte	 00000203 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
helloPrompt  . . . . . . . . . .	Byte	 000000F8 _DATA	
inputPrompt  . . . . . . . . . .	Byte	 0000019B _DATA	
instructionPrompt2 . . . . . . .	Byte	 00000129 _DATA	
instructionPrompt  . . . . . . .	Byte	 00000100 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
lineCounter  . . . . . . . . . .	DWord	 00000193 _DATA	
lowerLimit . . . . . . . . . . .	DWord	 00000004 CONST	
magenta  . . . . . . . . . . . .	Number	 00000005h   
noNegativePrompt . . . . . . . .	Byte	 00000271 _DATA	
numberCounter  . . . . . . . . .	DWord	 00000197 _DATA	
number . . . . . . . . . . . . .	DWord	 00000173 _DATA	
quotient . . . . . . . . . . . .	DWord	 0000018B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
repeatValidIntPrompt . . . . . .	Byte	 00000252 _DATA	
scaleFactor  . . . . . . . . . .	DWord	 0000018F _DATA	
spaceSym . . . . . . . . . . . .	Byte	 00000179 _DATA	
sumPrompt  . . . . . . . . . . .	Byte	 000001C9 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 0000016F _DATA	
titlePrompt  . . . . . . . . . .	Byte	 00000000 _DATA	
totalNumbersPrompt2  . . . . . .	Byte	 000001B9 _DATA	
totalNumbersPrompt . . . . . . .	Byte	 000001AC _DATA	
upperLimit . . . . . . . . . . .	DWord	 00000000 CONST	
userNamePrompt . . . . . . . . .	Byte	 000000C3 _DATA	
userName . . . . . . . . . . . .	Byte	 000000D7 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
